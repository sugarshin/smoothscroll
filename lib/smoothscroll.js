// Generated by CoffeeScript 1.9.0

/*!
 * @license smoothscroll
 * (c) sugarshin
 * License: MIT
 */

(function() {
  "use strict";
  var $, SmoothScroll,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  $ = require('jquery');

  module.exports = SmoothScroll = (function() {
    var _$body, _collection;

    _$body = $('html, body');

    _collection = [];

    SmoothScroll.addEasing = function(name, func) {
      return $.easing[name] = func;
    };

    SmoothScroll.getCollection = function() {
      return _collection;
    };

    SmoothScroll.prototype._defaults = {
      speed: 700,
      easingName: null,
      offset: 0,
      onScrollBefore: function(el) {},
      onScrollAfter: function(el) {}
    };

    SmoothScroll.prototype._configure = function(el, opts) {
      this.$el = $(el);
      this.opts = $.extend({}, this._defaults, opts);
      if (this.$el.attr('href') !== '#') {
        this.$target = $(this.$el.attr('href'));
      }
      return _collection.push(this);
    };

    function SmoothScroll(_at_el, opts) {
      this.el = _at_el;
      this._onClick = __bind(this._onClick, this);
      this._configure(this.el, opts);
      this.events();
    }

    SmoothScroll.prototype.scroll = function() {
      var val, _base;
      if (this.$target == null) {
        return;
      }
      if (typeof (_base = this.opts).onScrollBefore === "function") {
        _base.onScrollBefore(this.$el[0]);
      }
      val = this.$target.offset().top - this.opts.offset;
      _$body.stop(true, true).animate({
        scrollTop: val
      }, {
        duration: this.opts.speed,
        easing: this.opts.easingName
      }).promise().done((function(_this) {
        return function() {
          var _base1;
          return typeof (_base1 = _this.opts).onScrollAfter === "function" ? _base1.onScrollAfter(_this.$el[0]) : void 0;
        };
      })(this));
      return this;
    };

    SmoothScroll.prototype.cancel = function() {
      _$body.stop();
      return this;
    };

    SmoothScroll.prototype._onClick = function(ev) {
      ev.preventDefault();
      return this.scroll();
    };

    SmoothScroll.prototype.events = function() {
      this.$el.on('click.smoothscroll', this._onClick);
      return this;
    };

    SmoothScroll.prototype.unbind = function() {
      this.$el.off('click.smoothScroll');
      return this;
    };

    return SmoothScroll;

  })();

}).call(this);
