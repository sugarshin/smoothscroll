// Generated by CoffeeScript 1.9.1

/*!
 * @license smoothscroll
 * (c) sugarshin
 * License: MIT
 */
(function(root, factory) {
  if (typeof module === 'object' && typeof module.exports === 'object') {
    module.exports = factory(require('jquery'));
  } else {
    root.SmoothScroll || (root.SmoothScroll = factory(root.jQuery));
  }
})(this, function($) {
  "use strict";
  var SmoothScroll;
  return SmoothScroll = (function() {
    "use strict";
    SmoothScroll.addFX = function(name, func) {
      return $.easing[name] = func;
    };

    SmoothScroll.prototype._defaults = {
      speed: 500,
      fxName: null,
      offset: 0,
      onScrollBefore: function(el) {},
      onScrollAfter: function(el) {}
    };

    SmoothScroll.prototype._configure = function(el, opts) {
      this.$el = $(el);
      this.opts = $.extend({}, this._defaults, opts);
      if (this.$el.attr('href') !== '#') {
        return this.$target = $(this.$el.attr('href'));
      }
    };

    function SmoothScroll(el1, opts) {
      this.el = el1;
      this._configure(this.el, opts);
      this.events();
    }

    SmoothScroll.prototype.scroll = function() {
      var base, val;
      if (this.$target == null) {
        return;
      }
      if (typeof (base = this.opts).onScrollBefore === "function") {
        base.onScrollBefore(this.$el[0]);
      }
      val = this.$target.offset().top - this.opts.offset;
      $('html, body').stop(true, true).animate({
        scrollTop: val
      }, {
        duration: this.opts.speed,
        easing: this.opts.fxName
      }).promise().done((function(_this) {
        return function() {
          var base1;
          return typeof (base1 = _this.opts).onScrollAfter === "function" ? base1.onScrollAfter(_this.$el[0]) : void 0;
        };
      })(this));
      return this;
    };

    SmoothScroll.prototype.events = function() {
      this.$el.on('click.smoothscroll', (function(_this) {
        return function(ev) {
          ev.preventDefault();
          return _this.scroll();
        };
      })(this));
      return this;
    };

    SmoothScroll.prototype.unbind = function() {
      this.$el.off('click.smoothscroll');
      return this;
    };

    return SmoothScroll;

  })();
});
